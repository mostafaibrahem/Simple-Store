{"version":3,"sources":["products/Constants.js","products/Filter.js","products/Table.js","products/CodeFilter.js","products/TablePagination.js","products/NameFilter.js","products/Nav.js","products/Footer.js","products/MySpinner.js","products/Products.js","App.js","serviceWorker.js","index.js"],"names":["apiSource","Filter","state","data","getData","Axios","get","then","response","setState","console","log","catch","error","onChange","e","target","value","sessionStorage","setItem","props","anyUpdate","getItem","this","FormGroup","Label","for","CustomInput","key","type","id","name","label","map","item","departmentId","name_department","Component","products","Table","product","productId","active","style","textDecoration","color","price","discount","code","CodeFilter","promotionId","TablePagination","totalPages","Pagination","marginBottom","aria-label","Array","i","PaginationItem","PaginationLink","onClick","NameFilter","useState","setProduct","Input","width","placeholder","length","Nav","className","src","alt","height","Footer","class","MySpinner","mySpinner","aria-hidden","React","Products","pageSize","pageNumber","SetTotalPages","SetProducts","SetMySpinner","myPageNumber","myDepatmentId","myCode","productName","productList","count","useEffect","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8ef34da2.chunk.js","sourcesContent":["export let apiSource=\"https://truflaapi.azurewebsites.net/api/\";","import React, { Component } from 'react'\r\nimport { /* ListGroup, ListGroupItem, */ FormGroup, Label, CustomInput } from 'reactstrap';\r\nimport Axios from \"axios\";\r\nimport { apiSource } from \"./Constants\"\r\nexport default class Filter extends Component {\r\n    state = {\r\n        data: []\r\n    }\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n    getData = () => {\r\n        Axios.get(`${apiSource}departments`)\r\n            .then(response => {\r\n                this.setState({ data: response.data })\r\n                console.log(\"data\", this.state.data)\r\n            })\r\n            .catch(error => console.log(error.response))\r\n    }\r\n    onChange = (e) => {\r\n        console.log(e.target.value)\r\n        sessionStorage.setItem(\"depatmentId\",e.target.value)\r\n        this.props.anyUpdate(0,e.target.value,sessionStorage.getItem(\"code\"),sessionStorage.getItem(\"product\"))\r\n    }\r\n\r\n    render() {\r\n        let { data } = this.state\r\n        return (\r\n            <div >\r\n                <FormGroup>\r\n                    <Label for=\"exampleCheckbox\">Departments Filter</Label>\r\n                    <div>\r\n                    <CustomInput key=\"frist\" type=\"radio\" id=\"fristid\" name=\"radio\" label=\"All\" onChange={ this.onChange} value=\"0\" />\r\n\r\n                        {\r\n                            \r\n                            data.map(item => <>\r\n                                <CustomInput key={item.departmentId} type=\"radio\" id={item.departmentId} name=\"radio\" label={item.name_department} onChange={ this.onChange} value={item.departmentId} />\r\n\r\n                            </>)\r\n                        }\r\n                    </div>\r\n                </FormGroup>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Table } from 'reactstrap';\r\n\r\nexport default class Filter extends Component {\r\n\r\n\r\n    render() {\r\n        let { products } = this.props\r\n        return (\r\n            <div >\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Product Name</th>\r\n                            <th>Price</th>\r\n                            <th>Discount</th>\r\n                            <th>Code</th>\r\n                            <th>Price After Discount</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        {products.map(product => (\r\n                            <tr key={product.productId}>\r\n                                <td>{product.name}</td>\r\n                                {product.active === 1 ? <td style={{ textDecoration: \"line-through\", color: \"red\" }}> {product.price}</td> : <td> {product.price}</td>}\r\n                                {product.active === 1 ? <><td>{product.discount}%</td><td> {product.code}</td><td style={{ color: \"green\" }}>{product.price * (100 - product.discount) / 100}</td></> : <></>}</tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { /* ListGroup, ListGroupItem, */ FormGroup, Label, CustomInput } from 'reactstrap';\r\nimport Axios from \"axios\";\r\nimport { apiSource } from \"./Constants\"\r\nexport default class CodeFilter extends Component {\r\n    state = {\r\n        data: []\r\n    }\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n    getData = () => {\r\n        Axios.get(`${apiSource}Promotions`)\r\n            .then(response => {\r\n                this.setState({ data: response.data })\r\n                console.log(\"data\", this.state.data)\r\n            })\r\n            .catch(error => console.log(error.response))\r\n    }\r\n    onChange = (e) => {\r\n        console.log(e.target.value)\r\n        sessionStorage.setItem(\"code\", e.target.value)\r\n        this.props.anyUpdate(0, sessionStorage.getItem(\"depatmentId\"), e.target.value, sessionStorage.getItem(\"product\"))\r\n        sessionStorage.setItem(\"code\", e.target.value)\r\n    }\r\n\r\n    render() {\r\n        let { data } = this.state\r\n        return (\r\n            <div >\r\n                <FormGroup>\r\n                    <Label for=\"exampleCheckbox\">Promotion Code Filter</Label>\r\n                    <div>\r\n                        <CustomInput key=\"afrist\" type=\"radio\" id=\"secondid\" name=\"radio1\" label=\"All\" onChange={this.onChange} value=\"a\" />\r\n\r\n                        {\r\n\r\n                            data.map(item => <>\r\n                                {item.active === 0 ? <div key={\"a\"+item.promotionId}></div> : <CustomInput key={\"a\"+item.promotionId} type=\"radio\" id={\"a\" + item.promotionId} name=\"radio1\" label={item.code} onChange={this.onChange} value={item.code} />\r\n                                }\r\n\r\n                            </>)\r\n                        }\r\n                    </div>\r\n                </FormGroup>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\r\n\r\nfunction TablePagination(props) {\r\n    let { anyUpdate, totalPages } = props\r\n    return (\r\n        <>\r\n            <Pagination style={{marginBottom:\"10px\"}} aria-label=\"Page navigation example\">\r\n\r\n                {[...Array(totalPages + 1)].map((e, i) => <PaginationItem key={i} >\r\n                    <PaginationLink key={i} onClick={() => anyUpdate(i, sessionStorage.getItem(\"depatmentId\"), sessionStorage.getItem(\"code\"),sessionStorage.getItem(\"product\"))}>\r\n                        {i + 1}\r\n                    </PaginationLink>\r\n                </PaginationItem>)}\r\n            </Pagination>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TablePagination;\r\n","import React, { useState } from 'react';\r\nimport{FormGroup,Label,Input} from 'reactstrap';\r\nfunction NameFilter(props) {\r\n    const [product, setProduct] = useState('');\r\n   function onChange(e){\r\n        setProduct(e.target.value)\r\n        sessionStorage.setItem(\"product\",e.target.value)\r\n        console.log(product)\r\n        if(e.target.value.length===0){\r\n            props.anyUpdate(0,sessionStorage.getItem(\"depatmentId\"),sessionStorage.getItem(\"code\"),\"__\") \r\n            sessionStorage.setItem(\"product\",\"__\")\r\n        }\r\n        else props.anyUpdate(0, sessionStorage.getItem(\"depatmentId\"),sessionStorage.getItem(\"code\"),sessionStorage.getItem(\"product\")) \r\n    }\r\n  return (\r\n    <div>\r\n     <FormGroup >\r\n        <Label for=\"exampleEmail\" >Product Name Filter</Label>\r\n          <Input style={{width:\"90%\"}} type=\"text\" name=\"email\" id=\"exampleEmail\" placeholder=\"Search Product Name\" onChange={onChange} value={product} />\r\n      </FormGroup>\r\n    </div>\r\n  );\r\n}\r\nexport default NameFilter;","import React from 'react';\r\n//import { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\r\n\r\nfunction Nav(props) {\r\n    return (\r\n        <>\r\n            <div className=\"nav\">\r\n                <img className=\"navImage\" src='https://logos.textgiraffe.com/logos/logo-name/Mostafa-designstyle-pastel-m.png' alt=\"trula-logo\" height=\"50px\" />                \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <>\r\n            <div class=\"footer\">\r\n                <p >Code Challenge By:\r\n                \r\n                © Mostafa Ibrahim </p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nexport default class MySpinner extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.mySpinner===true ? <div className=\"spinnerDiv\" >\r\n                    <i className=\"fa fa-spinner fa-5x spinner  fa-spin\" aria-hidden=\"true\"></i>\r\n                </div> : \"\"}\r\n                {this.props.mySpinner===\"overlay-off\"? <div>\r\n                    <i className=\"fa fa-spinner fa-5x spinner  fa-spin\" aria-hidden=\"true\"></i>\r\n                </div> : \"\"}\r\n\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport Axios from \"axios\";\r\nimport { apiSource } from \"./Constants\"\r\nimport Filter from './Filter';\r\nimport Table from './Table'\r\nimport CodeFilter from './CodeFilter';\r\nimport TablePagination from './TablePagination';\r\nimport NameFilter from './NameFilter';\r\nimport Nav from './Nav';\r\nimport Footer from './Footer';\r\nimport MySpinner from './MySpinner';\r\nfunction Products() {\r\n    const [pageSize, SetPageSize] = useState(10)\r\n    const [pageNumber,] = useState(\"0\")\r\n    const [totalPages, SetTotalPages] = useState(\"\")\r\n    const [products, SetProducts] = useState([])\r\n    const [mySpinner, SetMySpinner] = useState(true)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(apiSource)\r\n        anyUpdate()\r\n        //this.getDepartments()\r\n        setFristQuery()\r\n\r\n    }, [])\r\n    function setFristQuery() {\r\n        sessionStorage.setItem(\"depatmentId\", \"0\")\r\n        sessionStorage.setItem(\"code\", \"a\")\r\n        sessionStorage.setItem(\"product\", \"__\")\r\n    }\r\n\r\n    function anyUpdate(myPageNumber = pageNumber, myDepatmentId = \"0\", myCode = \"a\", productName = \"__\") {\r\n        SetMySpinner(true)\r\n        Axios.get(`${apiSource}products/${pageSize}/${myPageNumber}/${myDepatmentId}/${myCode}/${productName}`)\r\n            .then(response => {\r\n\r\n                SetProducts(response.data[0].value.productList)\r\n                SetTotalPages(response.data[0].value.count)\r\n                SetMySpinner(false)\r\n                console.log(products)\r\n                console.log(totalPages)\r\n            })\r\n            .catch(error => console.log(error.response))\r\n    }\r\n    return (\r\n        <>\r\n            <MySpinner mySpinner={mySpinner} />\r\n            <Nav />\r\n            <div className=\"container\">\r\n                <div className=\"side\">\r\n                    <NameFilter key=\"filter1\" anyUpdate={anyUpdate} />\r\n                    <Filter key=\"filter2\" anyUpdate={anyUpdate} />\r\n                    <CodeFilter key=\"filter3\" anyUpdate={anyUpdate} />\r\n                </div>\r\n                <div className=\"main\">\r\n                    <Table products={products} />\r\n                    <TablePagination totalPages={totalPages} anyUpdate={anyUpdate} />\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\nexport default Products\r\n","import React from 'react';\n//import logo from './logo.svg';\nimport './App.scss';\nimport Products from './products/Products';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n   {/*    <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <Products/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"font-awesome/css/font-awesome.min.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}